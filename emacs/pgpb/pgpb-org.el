;;; WARNING: Do NOT edit this file by hand.
;; Instead edit the Org file and regenerate this
;; elisp script using: org-babel-tangle (C-c C-v t)

(require 'pgpb-org-helpers)
(require 'pgpb-org-files)
(require 'pgpb-org-agenda)
(require 'pgpb-latex)
(require 'pgpb-org-zsa)

(defvar pgpb-org-file-regex "\\.org.gpg$")

(pgpb-org-install-packages)
(pgpb-org-encrypt)
(pgpb-org-custom-vars)
(pgpb-org-mobile)
(pgpb-org-states)
(pgpb-org-refile)
(pgpb-org-stuck)
(pgpb-org-babel)
(pgpb-org-plantuml)
(pgpb-org-looks)
(pgpb-capture-templates)
(pgpb-org-online-images)
(pgpb-org-linux)
(pgpb-org-keys)
(pgpb-org-darwin)
(pgpb-autofill)

;;; Macros
;; Time-range: <time>--<time>
(fset 't-range
      (kmacro-lambda-form [?\C-u ?\C-c ?. return ?- ?- ?\C-u ?\C-c ?. return] 0 "%d"))

(defun pgpb-org-main (gpg-keys org-dirs)
  "Configure environment Org"
  (print (format "gpg-keys: %s; org-dirs: %s" gpg-keys org-dirs))
  (let ((agenda-files (nth 0 org-dirs))
        (journal-files (nth 1 org-dirs))
        (archive-files (nth 2 org-dirs)))
    (message "
agenda: %s
journal: %s
archive: %s" agenda-files journal-files archive-files)))

(provide 'pgpb-org)
