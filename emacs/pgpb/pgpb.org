#+PROPERTY: header-args :results verbatim :tangle pgpb.el :session pgpb :cache no

* Emacs package: pgpb.el

  Defines a package namespace that configures my Emacs environment the
  way I like it.

  Produces the file [[file:pgpb.el]] using =org-tangle (C-c C-v t)=.
  
  
** Warning: file is autogenerated via Org Babel tangle

   #+begin_src elisp
     ;;; WARNING: Do NOT edit this file by hand.
     ;; Instead edit the Org file and regenerate this
     ;; elisp script using: org-babel-tangle (C-c C-v t)
     #+end_src


** Register/Install packages 

   #+begin_src elisp
     (require 'pgpb-packages)
   #+end_src
   

** Require helper functions: [[file:pgpb-helpers.org]]

   Load the necessary functions to continue the configuration of
   Emacs:
   
   #+begin_src elisp
     (require 'pgpb-helpers)
   #+end_src


** TODO Extract package: pgpb-darwin


** TODO Extract package: pgpb-linux


** TODO Extract package: pgpb-win


** Configure Emacs via helper functions

   The main work is done by calling helper functions to configure
   specific aspects of Emacs.

   #+begin_src elisp
     (pgpb-install-packages)
     (pgpb-ignore-custom-file)
     (pgpb-auto-dim-buffers)
     (pgpb-customize-vars)
     (pgpb-javascript)
     (pgpb-latex-opts)
     (pgpb-autosave)
     (pgpb-flyspell)
     (pgpb-magit)
     (pgpb-customize-appearance)
     (pgpb-linux-hacks)
     (pgpb-global-keys)

     ;;; Load Windows customizations
     (when (eq system-type 'windows-nt)
       (load-relative "./win10.el")
       (load-relative "./wsl.el")
       (message "Ok: windows hacks loaded.")
       )

     ;;; Darwin (MacOS) customizations
     (when (eq system-type 'darwin)
       (load-relative "./darwin.el")
       (message "Ok: macos hacks loaded.")
       )

     (load-relative "./abbrev.el")

     ;;; Helm stuff
     (require 'init-helm-projectile)

     ;;; Org Mode
     (require 'pgpb-org)
     (pgpb-org-main pgpb-gpg-keys
                    pgpb-org-dirs)


     (require 'pgpb-docker)

     (provide 'pgpb)
   #+end_src


