#+PROPERTY: header-args :results verbatim :tangle pgpb.el :session pgpb :cache no
#+auto_tangle: t


* Emacs package: pgpb

  Defines a package namespace that configures my Emacs environment the
  way I like it.

  Produces the file [[file:pgpb.el]] using =org-tangle (C-c C-v t)=.
  
  
** Warning: file is autogenerated via Org Babel tangle

   #+begin_src elisp
     ;;; WARNING: Do NOT edit this file by hand.
     ;; Instead edit the Org file and regenerate this
     ;; elisp script using: org-babel-tangle (C-c C-v t)
     #+end_src


** Register/Install packages 

   #+begin_src elisp
     (require 'pgpb-packages)
   #+end_src
   

** TODO Base configuration: [[file:pgpb-helpers.org][pgpb-helpers.org]]

   At the moment all helper functions are in a single file, the
   goal is to rearrange them, so that the base configuration contains
   only the minimal set up.

   Non-critical settings should be moved to the bottom.
   
   #+begin_src elisp
     (require 'pgpb-helpers)
   #+end_src


*** TODO Configure Emacs via helper functions

    The main work is done by calling helper functions to configure
    specific aspects of Emacs.

    #+begin_src elisp
      (pgpb-install-packages)
      (pgpb-ignore-custom-file)
      (pgpb-auto-dim-buffers)
      (pgpb-customize-vars)
      (pgpb-javascript)
      (pgpb-latex-opts)
      (pgpb-autosave)
      (pgpb-flyspell)
      (pgpb-magit)
      (pgpb-customize-appearance)
      (pgpb-global-keys)
    #+end_src


** Load Helm+Projectile stuff

   #+begin_src elisp
     (require 'init-helm-projectile)
   #+end_src


** Load Org Mode
   #+begin_src elisp
     (require 'pgpb-org)
   #+end_src


** Docker
   #+begin_src elisp
     (require 'pgpb-docker)
   #+end_src


** Darwin[macos] customisations
   #+begin_src elisp
     (when (eq system-type 'darwin)
       (require 'pgpb-macos)
       )
   #+end_src


** Linux-specific customisations!
   #+begin_src elisp
     (when (eq system-type 'gnu/linux)
       (message "Inside a Linux system")
       (use-package pinentry
         :ensure t
         :config
         (pinentry-start)
         )

       ;;; My system uses =lp= instead of =lpr=
       ;; https://stackoverflow.com/questions/28765952/emacs-printing-error-unknown-option-j
       (setq lpr-command "lp"
             lpr-add-switches nil)
       (message "Linux-specific options set"))
   #+end_src


** Windows-specific customisations

   #+begin_src elisp
     (when (eq system-type 'windows-nt)
       (require 'pgpb-win10)
       (require 'pgpb-wsl)
       )

   #+end_src


** Load abbreviations

   #+begin_src elisp
     (require 'pgpb-abbrev)
   #+end_src
   

** Announce package
   #+begin_src elisp
     (provide 'pgpb)
   #+end_src

